@import "./variables";

@mixin display-grid($col-list: 0, $row-list: 0, $col-gap: 0, $row-gap: 0) {
  display: grid;
  display: -ms-grid;

  @if $col-list != 0 {
    @if $col-gap != 0 {
      $col: ();
      @for $i from 1 through length($col-list) {
        @if $i != length($col-list) {
          $col: append($col, nth($col-list, $i), space);
          $col: append($col, $col-gap, space);
        } @else {
          $col: append($col, nth($col-list, $i), space);
        }
      }
      -ms-grid-columns: $col;
      grid-template-columns: $col-list;
      grid-column-gap: $col-gap;
    } @else {
      grid-template-columns: $col-list;
      -ms-grid-columns: $col-list;
    }
  }

  @if $row-list != 0 {
    @if $row-gap != 0 {
      $row: ();
      @for $i from 1 through length($row-list) {
        @if $i != length($row-list) {
          $row: append($row, nth($row-list, $i), space);
          $row: append($row, $row-gap, space);
        } @else {
          $row: append($row, nth($row-list, $i), space);
        }
      }
      -ms-grid-rows: $row;
      grid-template-rows: $row-list;
      grid-row-gap: $row-gap;
    } @else {
      grid-template-rows: $row-list;
      -ms-grid-rows: $row-list;
    }
  }
}

@mixin grid-column($col, $with-gap: 0) {
  grid-column: $col;
  @if $with-gap != 0 {
    -ms-grid-column: $col + ($col - 1);
  } @else {
    -ms-grid-column: $col;
  }
}

@mixin grid-column-span($start, $end, $with-gap: 0) {
  grid-column-start: $start;
  grid-column-end: $end;
  $span: $end - $start;
  @if $with-gap != 0 {
    -ms-grid-column: ($start*2) - 1;
    -ms-grid-column-span: ($span*2) - 1;
  } @else {
    -ms-grid-column: $start;
    -ms-grid-column-span: $span;
  }
}

@mixin grid-row($row, $with-gap: 0) {
  grid-row: $row;
  @if $with-gap != 0 {
    -ms-grid-row: ($row*2) - 1;
  } @else {
    -ms-grid-row: $row;
  }
}

@mixin grid-row-span($start, $end, $with-gap: 0) {
  grid-row-start: $start;
  grid-row-end: $end;
  $span: $end - $start;
  @if $with-gap != 0 {
    -ms-grid-row: ($start*2) - 1;
    -ms-grid-row-span: ($span*2) - 1;
  } @else {
    -ms-grid-row: $start;
    -ms-grid-row-span: $span;
  }
}

@mixin display-flex-center() {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin display-flex-Y-center-X-start() {
  display: flex;
  align-items: center;
  justify-content: flex-start;
}

@mixin display-flex-Y-center-X-end() {
  display: flex;
  align-items: center;
  justify-content: flex-end;
}

@mixin display-flex-Y-start-X-center() {
  display: flex;
  align-items: flex-start;
  justify-content: center;
}

@mixin display-flex-Y-start-X-end() {
  display: flex;
  align-items: flex-start;
  justify-content: flex-end;
}

@mixin display-flex-Y-end-X-start() {
  display: flex;
  align-items: flex-end;
  justify-content: flex-start;
}

@mixin display-flex-Y-end-X-center() {
  display: flex;
  align-items: flex-end;
  justify-content: center;
}

@mixin display-flex-Y-end-X-center() {
  display: flex;
  align-items: flex-end;
  justify-content: flex-end;
}

@mixin display-flex-Y-end-X-space-between() {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

// MIXIN FOR TYPOGRAPHY

@mixin typography-h1() {

  font-size: 24px;
  font-style: normal;
  font-stretch: normal;
  line-height: 1.67;
  letter-spacing: normal;
}

@mixin typography-h2() {
  font-size: 20px;
  font-style: normal;
  font-stretch: normal;
  line-height: 1.6;
  letter-spacing: normal;
}

@mixin typography-h3() {
  font-size: 20 px-small;
  font-style: normal;
  font-stretch: normal;
  line-height: 1.6;
  letter-spacing: normal;
}

@mixin typography-p() {
  font-size: 14px;
  font-style: normal;
  font-stretch: normal;
  line-height: 1.71;
  letter-spacing: normal;
  margin-bottom: 0;
}

@mixin typography-small() {
  font-size: 12px;
  font-style: normal;
  font-stretch: normal;
  line-height: 1.33;
  letter-spacing: normal;
}

@mixin set-typography-variants($color, $weight) {
  color: $color;
  font-weight: $weight;
}


// MIXIN FOR app-TABLE

@mixin app-table($max-height: 0) {
  @include display-grid((1fr), (auto auto auto));
  .app-scrollbar-theme {
    &.grid-row1, &.app-table-header {
      @include grid-row(1);
      overflow: hidden;
    }

    &.grid-row2, &.app-table-content {
      @include grid-row(2);
      overflow: hidden;
      @if ($max-height != 0) {
        max-height: $max-height;
      }
    }

    &.grid-row3, &.app-table-footer {
      @include grid-row(3);
    }
  }
}

@mixin app-button-status($color,$hoverColor,$activeColor, $focusColor,$disabledColor,$shadowColor) {
  //$primary-color
  background-color: $color;
  color: #fff;
  &:hover {
    background: $hoverColor radial-gradient(circle, transparent 1%, $hoverColor 1%) center/15000%;
  }
  &:active {
    background-color: $activeColor;
    transition: background 0s;
  }
  &:not(:active):focus {
    background-color: $focusColor;
    border: 2px solid #fff;
    box-shadow: 0 0 2px 2px $shadowColor;
  }
  &:disabled {
    opacity: 0.3;
  }

}

// table
@mixin setup-table-cell-basis($cell-width) {
  flex: 0 0 $cell-width;
}

@mixin setup-table-row-height($row-height) {
  height: $row-height;
}

@mixin circle($dim, $radius) {
  .circle {
    width: $dim;
    height: $dim;
    border-radius: $radius;
  }


}



